---
  hosts: all
  become: true
  vars:
    warning_days: 15
    admin_email: "usafea6.evrs.support@us.af.mil"
    smtp_server: "af-smtp.us.af.mil"
    smtp_port: 25
    smtp_sender: "noreply@us.af.mil"

  tasks:
    - name: Get users with valid /home directories (using getent)
      getent:
        database: passwd
        key: "*"
      register: all_users
      changed_when: false

    - name: Filter users with /home directories and existing home folders
      set_fact:
        home_users: "{{ all_users.results | selectattr('pw_dir', 'match', '^/home/') | selectattr('pw_dir', 'is_directory') | map(attribute='pw_name') | list }}"

    - name: Initialize user expiry info
      set_fact:
        user_expiry_info: {}

    - name: Check password expiration for valid home users  # loop is OUTSIDE the block
      loop: "{{ home_users }}"
      vars:  # vars is also OUTSIDE the block
        user: "{{ item }}"
      block: 
        - name: Get password expiration info (using chage)
          chage:
            user: "{{ user }}"
          register: chage_result
          failed_when: false

        - name: Process expiration date
          set_fact:
            user_expiry_info: "{{ user_expiry_info | combine({ user: {'expiry_date': chage_result.expire_date, 'days_remaining': (chage_result.expire_date | int - ansible_date_time.epoch | int) / 86400 | round | int } }) }}"
          when: chage_result.expire_date is defined and chage_result.expire_date != -1e != -1

    - name: Filter expiring users
      set_fact:
        expiring_users: "{{ user_expiry_info | dict2items | selectattr('value.days_remaining', 'defined') | selectattr('value.days_remaining', 'le', warning_days) | list }}"

    - name: Create email body if expiring users found
      set_fact:
        email_body: |
          Password Expiration Report - {{ ansible_hostname }}
          Generated on: {{ ansible_date_time.iso8601 }}

          {% for user_info in expiring_users %}
          - User: {{ user_info.key }}
            Expires on: {{ '%Y-%m-%d' | strftime(user_info.value.expiry_date) }}
            Days remaining/expired: {{ user_info.value.days_remaining }}
          {% endfor %}
      when: expiring_users | length > 0

    - name: Send email notification
      mail:
        host: "{{ smtp_server }}"
        port: "{{ smtp_port }}"
        to: "{{ admin_email }}"
        subject: "Password Expiration Alert on {{ ansible_hostname }}"
        body: "{{ email_body }}"
        from: "{{ smtp_sender }}"
      when: expiring_users | length > 0

    - name: Display message if no expiring passwords found
      debug:
        msg: "No password expirations found among /home users within {{ warning_days }} days."
      when: expiring_users | length == 0 and home_users | length > 0

    - name: Display message if no /home users found
      debug:
        msg: "No users with valid home directories in /home found."
      when: home_users | length == 0
