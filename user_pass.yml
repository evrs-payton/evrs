- name: Check password expirations for /home users and notify
  hosts: all
  become: yes
  vars:
    smtp_host: relay.internal.company
    smtp_port: 25
    email_to: security-team@yourcompany.com
    email_from: ansible@yourcompany.com
    today: "{{ lookup('pipe', 'date +%Y-%m-%d') | to_datetime('%Y-%m-%d') }}"

  tasks:
    - name: Get usernames from /home
      shell: "ls -1 /home"
      register: home_users
      changed_when: false

    - name: Initialize list for expiring accounts
      set_fact:
        expiring_accounts: []

    - name: Check password expiration for each user
      command: "chage -l {{ item }}"
      register: chage_output
      loop: "{{ home_users.stdout_lines }}"
      failed_when: false
      changed_when: false

    - name: Process expiration and collect warnings
      set_fact:
        expiring_accounts: "{{ expiring_accounts + [user_entry] }}"
      vars:
        expiry_line_raw: "{{ item.stdout_lines | select('search', '^Password expires') | first | default('') }}"
        expiry_value: >-
          {{
            (':' in expiry_line_raw)
              | ternary(expiry_line_raw.split(':', 1)[1] | regex_replace('\\s+', ' ') | trim, '')
          }}
        expiry_valid: "{{ expiry_value != '' and expiry_value != 'never' }}"
        expiry_date_obj: >-
          {{ expiry_value | to_datetime('%b %d, %Y') if expiry_valid else none }}
        days_remaining: >-
          {{ (expiry_date_obj - today).days | int if expiry_valid else -999 }}
        user_entry: >-
          {{
            (expiry_valid and (days_remaining <= 15))
              | ternary({
                'username': item.item,
                'days_remaining': days_remaining,
                'expiry_date': expiry_date_obj
              }, omit)
          }}
      when: item.stdout_lines is defined and
            (expiry_value != '' and expiry_value != 'never') and
            ((expiry_value | to_datetime('%b %d, %Y') - today).days <= 15)
      loop: "{{ chage_output.results }}"
      loop_control:
        label: "{{ item.item }}"

    - name: Send email if any accounts are expiring
      mail:
        host: "{{ smtp_host }}"
        port: "{{ smtp_port }}"
        to: "{{ email_to }}"
        from: "{{ email_from }}"
        subject: "⚠️ Expiring Passwords on {{ ansible_hostname }}"
        body: |
          The following user accounts on {{ ansible_hostname }} have expired or are expiring soon:

          {% for acct in expiring_accounts %}
          - {{ acct.username }}: expires {{ acct.expiry_date.strftime('%Y-%m-%d') if acct.expiry_date is not none else 'unknown' }}, in {{ acct.days_remaining }} day(s)
          {% endfor %}

          Please rotate these passwords to avoid account lockouts.
        secure: never
      when: expiring_accounts | length > 0
