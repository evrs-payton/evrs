---
- name: Check password expiration for users with /home directories
  hosts: all
  become: true
  vars:
    warning_days: 15
    admin_email: "usafea6.evrs.support@us.af.mil"  # Replace with your email
    smtp_server: "af-smtp.us.af.mil"  # Replace with your SMTP server
    smtp_port: 25
    smtp_sender: "noreply@us.af.mil"  # Replace with your sender address

  tasks:
   - name: Get users with valid /home directories (using getent)
     getent:
       database: passwd
       key: "{{ item }}"  # Loop over a list of all possible usernames 
     loop: "{{ lookup('file', '/etc/passwd', splitlines=True) | map('regex_replace', '^(.*?):.*$', '\\1') | list }}" #Extract usernames
     register: all_users
     changed_when: false
     ignore_errors: true
     
   - name: Fail the play if any user lookup failed
     fail:
       msg: "Failed to lookup user {{ item.item }}."
      when: item.rc != 0
      loop: "{{ all_users.results }}"

   - name: set fact all users
     set_fact:
       all_users_list: "{{ all_users.results|selectattr('rc', 'eq', 0)|list }}"

   - name: Filter users with /home directories and existing home folders
     set_fact:
        home_users: "{{ all_users.results | selectattr('pw_dir', 'match', '^/home/') | selectattr('pw_dir', 'is_directory') | map(attribute='pw_name') | list }}"

   - name: Initialize user expiry info
     set_fact:
        user_expiry_info: {}

   - name: Check password expiration for each valid home user (workaround)
     include_tasks: check_user_expiry.yml
     loop: "{{ home_users }}"
     vars:
       user: "{{ item }}"
     loop_control:  # Essential for Ansible 2.9 with include_tasks and loop
       loop_var: user


   - name: Filter expiring users
     set_fact:
        expiring_users: "{{ user_expiry_info | dict2items | selectattr('value.days_remaining', 'defined') | selectattr('value.days_remaining', 'le', warning_days) | list }}"

   - name: Create email body if expiring users found
     set_fact:
       email_body: |
          Password Expiration Report - {{ ansible_hostname }}
          Generated on: {{ ansible_date_time.iso8601 }}

          {% for user_info in expiring_users %}
          - User: {{ user_info.key }}
            Expires on: {{ '%Y-%m-%d' | strftime(user_info.value.expiry_date) }}
            Days remaining/expired: {{ user_info.value.days_remaining }}
          {% endfor %}
     when: expiring_users | length > 0

   - name: Send email notification
     mail:
       host: "{{ smtp_server }}"
       port: "{{ smtp_port }}"
       to: "{{ admin_email }}"
       subject: "Password Expiration Alert on {{ ansible_hostname }}"
       body: "{{ email_body }}"
       from: "{{ smtp_sender }}"
     when: expiring_users | length > 0

   - name: Display message if no expiring passwords found
     debug:
       msg: "No password expirations found among /home users within {{ warning_days }} days."
     when: expiring_users | length == 0 and home_users | length > 0

   - name: Display message if no /home users found
     debug:
       msg: "No users with valid home directories in /home found."
     when: home_users | length == 0
